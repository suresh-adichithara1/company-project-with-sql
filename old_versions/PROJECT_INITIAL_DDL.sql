DROP DATABASE IF EXISTS PROJECTDB;
CREATE DATABASE PROJECTDB;
USE PROJECTDB;

CREATE TABLE PERSON (
PERSONAL_ID INT PRIMARY KEY NOT NULL,
F_NAME VARCHAR(40),
L_NAME VARCHAR(40),
BIRTH_DATE DATE,
GENDER CHAR(1),
ADDRESS_LINE1 VARCHAR(50),
ADDRESS_LINE2 VARCHAR(50),
CITY VARCHAR(30),
STATE VARCHAR(20),
ZIP_CODE VARCHAR(20)
);

CREATE TABLE DEPARTMENT (
DEPT_ID INT PRIMARY KEY NOT NULL,
DEPT_NAME VARCHAR(30)
);

CREATE TABLE EMPLOYEE (
EMPLOYEE_ID INT PRIMARY KEY NOT NULL,
EMPLOYEE_RANK VARCHAR(30),
EMPLOYEE_TITLE VARCHAR(30),
EMP_SUPERVISOR INT,
DEPT_ID INT,
FOREIGN KEY (EMPLOYEE_ID) REFERENCES PERSON (PERSONAL_ID) ON DELETE CASCADE,
FOREIGN KEY (EMP_SUPERVISOR) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT (DEPT_ID) ON DELETE CASCADE
);

CREATE TABLE CUSTOMER (
CUSTOMER_ID INT PRIMARY KEY NOT NULL,
PREF_SALES INT,
FOREIGN KEY (CUSTOMER_ID) REFERENCES PERSON (PERSONAL_ID) ON DELETE CASCADE,
FOREIGN KEY (PREF_SALES) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE
);

CREATE TABLE POTENTIAL_EMPLOYEE (
POTENTIAL_EMP_ID INT PRIMARY KEY NOT NULL,
FOREIGN KEY (POTENTIAL_EMP_ID) REFERENCES PERSON (PERSONAL_ID) ON DELETE CASCADE
);

CREATE TABLE JOB (
JOB_ID INT PRIMARY KEY NOT NULL,
JOB_DESC VARCHAR(75)
);

CREATE TABLE MARKETING_SITE (
SITE_ID INT PRIMARY KEY NOT NULL,
SITE_NAME VARCHAR(30),
SITE_LOCATION VARCHAR(40)
);

CREATE TABLE VENDOR (
VENDOR_ID INT PRIMARY KEY NOT NULL,
VENDOR_NAME VARCHAR(30),
VENDOR_ADDRESS_LINE1 VARCHAR(50),
VENDOR_ADDRESS_LINE2 VARCHAR(50),
VENDOR_CITY VARCHAR(30),
VENDOR_STATE VARCHAR(20),
VENDOR_ZIP_CODE VARCHAR(20),
VENDOR_ACCOUNT_NO INT,
VENDOR_CREDIT_RATING INT,
VENDOR_WEBSERVICE_URL VARCHAR(75)
);

CREATE TABLE PRODUCT (
PRODUCT_ID INT PRIMARY KEY NOT NULL,
PRODUCT_TYPE VARCHAR(50),
PRODUCT_SIZE VARCHAR(50),
LIST_PRICE INT,
PRODUCT_STYLE VARCHAR(50),
PRODUCT_WEIGHT INT
);

CREATE TABLE SALARY (
TRANSACTION_NO INT NOT NULL,
SALARY_EMPLOYEE_ID INT NOT NULL,
PAY_DATE DATE,
AMOUNT INT,
PRIMARY KEY(TRANSACTION_NO, SALARY_EMPLOYEE_ID),
FOREIGN KEY (SALARY_EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE
);

CREATE TABLE SHIFT (
EMPLOYEE_ID INT NOT NULL,
DEPT_ID INT NOT NULL,
SHIFT_START_TIME TIME,
SHIFT_END_TIME TIME,
PRIMARY KEY(EMPLOYEE_ID, DEPT_ID, SHIFT_START_TIME),
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT (DEPT_ID) ON DELETE CASCADE
);

CREATE TABLE INTERVIEW (
CANDIDATE_ID_EMPLOYEE INT, 
CANDIDATE_ID_POTENTIAL INT,
INTERVIEW_ROUND INT NOT NULL,
JOB_ID INT NOT NULL,
INTERVIEWER_ID INT NOT NULL,
JOB_POSITION VARCHAR(75),
INTERVIEW_TIME TIME NOT NULL,
INTERVIEW_GRADE INT,
CATEGORYTYPE ENUM ('EMPLOYEE', 'POTENTIAL_EMPLOYEE') NOT NULL,
PRIMARY KEY(CATEGORYTYPE, INTERVIEW_ROUND, JOB_ID, INTERVIEWER_ID, INTERVIEW_TIME),
FOREIGN KEY (CANDIDATE_ID_EMPLOYEE) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (CANDIDATE_ID_POTENTIAL) REFERENCES POTENTIAL_EMPLOYEE (POTENTIAL_EMP_ID) ON DELETE CASCADE,
FOREIGN KEY (JOB_ID) REFERENCES JOB (JOB_ID) ON DELETE CASCADE,
FOREIGN KEY (INTERVIEWER_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
CHECK (
        (CATEGORYTYPE = 'EMPLOYEE' AND CANDIDATE_ID_EMPLOYEE IS NOT NULL AND CANDIDATE_ID_POTENTIAL IS NULL) OR
        (CATEGORYTYPE = 'POTENTIAL_EMPLOYEE' AND CANDIDATE_ID_POTENTIAL IS NOT NULL AND CANDIDATE_ID_EMPLOYEE IS NULL)
    )
);

CREATE TABLE SALE (
SALESMAN_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
SITE_ID INT NOT NULL,
SALES_TIME TIME NOT NULL,
PRIMARY KEY(SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME),
FOREIGN KEY (SALESMAN_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ON DELETE CASCADE,
FOREIGN KEY (SITE_ID) REFERENCES MARKETING_SITE (SITE_ID) ON DELETE CASCADE
);

CREATE TABLE PART (
VENDOR_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
PART_TYPE VARCHAR(30) NOT NULL,
PRIMARY KEY(VENDOR_ID, PRODUCT_ID, PART_TYPE),
FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID) ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ON DELETE CASCADE
);

CREATE TABLE USES (
PRODUCT_ID INT NOT NULL,
PART_TYPE VARCHAR(30) NOT NULL,
VENDOR_ID INT NOT NULL,
PART_AMOUNT INT NOT NULL,
PRIMARY KEY(PRODUCT_ID, PART_TYPE, PART_AMOUNT),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ON DELETE CASCADE,
FOREIGN KEY (VENDOR_ID, PRODUCT_ID, PART_TYPE) REFERENCES PART (VENDOR_ID, PRODUCT_ID, PART_TYPE) ON DELETE CASCADE
);

CREATE TABLE SUPPLIES (
VENDOR_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
SUPPLY_PRICE INT NOT NULL,
PART_TYPE VARCHAR(30) NOT NULL,
PRIMARY KEY(VENDOR_ID, PART_TYPE, SUPPLY_PRICE),
FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR (VENDOR_ID) ON DELETE CASCADE,
FOREIGN KEY (VENDOR_ID, PRODUCT_ID, PART_TYPE) REFERENCES PART (VENDOR_ID, PRODUCT_ID, PART_TYPE) ON DELETE CASCADE
);

CREATE TABLE POSTS (
DEPT_ID INT NOT NULL,
JOB_ID INT NOT NULL,
POSTED_DATE DATE,
PRIMARY KEY(DEPT_ID, JOB_ID),
FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT (DEPT_ID) ON DELETE CASCADE,
FOREIGN KEY (JOB_ID) REFERENCES JOB (JOB_ID) ON DELETE CASCADE
);

CREATE TABLE APPLY (
APPLICANT_CATEGORY ENUM ('EMPLOYEE', 'POTENTIAL_EMPLOYEE') NOT NULL,
EMPLOYEE_ID INT,
POTENTIAL_EMP_ID INT,
JOB_ID INT NOT NULL,
PRIMARY KEY(APPLICANT_CATEGORY, JOB_ID),
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (POTENTIAL_EMP_ID) REFERENCES POTENTIAL_EMPLOYEE (POTENTIAL_EMP_ID) ON DELETE CASCADE,
FOREIGN KEY (JOB_ID) REFERENCES JOB (JOB_ID) ON DELETE CASCADE,
CHECK (
        (APPLICANT_CATEGORY = 'EMPLOYEE' AND EMPLOYEE_ID IS NOT NULL AND POTENTIAL_EMP_ID IS NULL) OR
        (APPLICANT_CATEGORY = 'POTENTIAL_EMPLOYEE' AND POTENTIAL_EMP_ID IS NOT NULL AND EMPLOYEE_ID IS NULL)
    )
);

CREATE TABLE INTERVIEWS (
APPLICANT_CATEGORY ENUM ('EMPLOYEE', 'POTENTIAL_EMPLOYEE') NOT NULL,
EMPLOYEE_ID INT,
POTENTIAL_EMP_ID INT,
INTERVIEW_ROUND INT NOT NULL,
INTERVIEW_TIME TIME NOT NULL,
JOB_ID INT NOT NULL,
INTERVIEWER_ID INT NOT NULL,
PRIMARY KEY(APPLICANT_CATEGORY, INTERVIEW_ROUND, INTERVIEW_TIME),
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (POTENTIAL_EMP_ID) REFERENCES POTENTIAL_EMPLOYEE (POTENTIAL_EMP_ID) ON DELETE CASCADE,
FOREIGN KEY (APPLICANT_CATEGORY, INTERVIEW_ROUND, JOB_ID, INTERVIEWER_ID, INTERVIEW_TIME) REFERENCES INTERVIEW (CATEGORYTYPE, INTERVIEW_ROUND, JOB_ID, INTERVIEWER_ID, INTERVIEW_TIME),
CHECK (
        (APPLICANT_CATEGORY = 'EMPLOYEE' AND EMPLOYEE_ID IS NOT NULL AND POTENTIAL_EMP_ID IS NULL) OR
        (APPLICANT_CATEGORY = 'POTENTIAL_EMPLOYEE' AND POTENTIAL_EMP_ID IS NOT NULL AND EMPLOYEE_ID IS NULL)
    )
);

CREATE TABLE CONDUCT_INTERVIEW (
APPLICANT_CATEGORY ENUM ('EMPLOYEE', 'POTENTIAL_EMPLOYEE') NOT NULL,
CANDIDATE_EMPLOYEE_ID INT,
CANDIDATE_POTENTIAL_EMP_ID INT,
INTERVIEWER_ID INT NOT NULL,
INTERVIEW_ROUND INT NOT NULL,
INTERVIEW_TIME TIME NOT NULL,
JOB_ID INT NOT NULL,
PRIMARY KEY(APPLICANT_CATEGORY, INTERVIEWER_ID, INTERVIEW_ROUND, INTERVIEW_TIME),
FOREIGN KEY (CANDIDATE_EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (CANDIDATE_POTENTIAL_EMP_ID) REFERENCES POTENTIAL_EMPLOYEE (POTENTIAL_EMP_ID) ON DELETE CASCADE,
FOREIGN KEY (APPLICANT_CATEGORY, INTERVIEW_ROUND, JOB_ID, INTERVIEWER_ID, INTERVIEW_TIME) REFERENCES INTERVIEW (CATEGORYTYPE, INTERVIEW_ROUND, JOB_ID, INTERVIEWER_ID, INTERVIEW_TIME),
CHECK (
        (APPLICANT_CATEGORY = 'EMPLOYEE' AND CANDIDATE_EMPLOYEE_ID IS NOT NULL AND CANDIDATE_POTENTIAL_EMP_ID IS NULL) OR
        (APPLICANT_CATEGORY = 'POTENTIAL_EMPLOYEE' AND CANDIDATE_POTENTIAL_EMP_ID IS NOT NULL AND CANDIDATE_EMPLOYEE_ID IS NULL)
    )
);

CREATE TABLE WORKS_IN (
EMPLOYEE_ID INT NOT NULL,
SITE_ID INT NOT NULL,
PRIMARY KEY(EMPLOYEE_ID, SITE_ID),
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE CASCADE,
FOREIGN KEY (SITE_ID) REFERENCES MARKETING_SITE (SITE_ID) ON DELETE CASCADE
);

CREATE TABLE SELLS (
SALES_TIME TIME NOT NULL,
SITE_ID INT NOT NULL,
SALESMAN_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
PRIMARY KEY(SALES_TIME, SITE_ID, SALESMAN_ID),
FOREIGN KEY (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME) REFERENCES SALE (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME)
);

CREATE TABLE SOLD_AT (
PRODUCT_ID INT NOT NULL,
SALES_TIME TIME NOT NULL,
SITE_ID INT NOT NULL,
SALESMAN_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
PRIMARY KEY(PRODUCT_ID, SALES_TIME, SITE_ID),
FOREIGN KEY (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME) REFERENCES SALE (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME)
);

CREATE TABLE BUYS (
CUSTOMER_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
SALES_TIME TIME NOT NULL,
SITE_ID INT NOT NULL,
SALESMAN_ID INT NOT NULL,
PRIMARY KEY(CUSTOMER_ID, PRODUCT_ID, SALES_TIME),
FOREIGN KEY (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME) REFERENCES SALE (SALESMAN_ID, CUSTOMER_ID, PRODUCT_ID, SITE_ID, SALES_TIME)
);

CREATE TABLE PERSON_PHONE (
PERSONAL_ID INT PRIMARY KEY NOT NULL,
PHONE_NO VARCHAR(30),
FOREIGN KEY (PERSONAL_ID) REFERENCES PERSON (PERSONAL_ID) ON DELETE CASCADE
);
